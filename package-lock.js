import inquirer from 'inquirer';
import argon2 from 'argon2';

async function getPasswordInput() {
    // Отримуємо пароль від користувача через inquirer
    const answers = await inquirer.prompt([
        {
            type: 'password',
            name: 'Password',
            message: 'Enter your password:',
            mask: '*', // Маскуємо введення пароля
        },
        {
            type: 'password',
            name: 'Confirm_your_password',
            message: 'Confirm your password:',
            mask: '*',
        }
    ]);

    console.log('Password: ', answers.Password);
    console.log('Confirmed password: ', answers.Confirm_your_password);

    // Перевіряємо паролі на відповідність
    return passwordVerification(answers);
}

async function passwordVerification(answers) {
    if (answers.Password === answers.Confirm_your_password) {
        try {
            // Хешуємо пароль за допомогою argon2
            const hashedPassword = await argon2.hash(answers.Password);
            console.log('Hashed Password: ', hashedPassword);
        } catch (error) {
            console.error('Error hashing password: ', error);
        }
    } else {
        console.log('Passwords do not match');
    }
}

// Викликаємо функцію для отримання вводу і хешування пароля
//getPasswordInput();

//Цей код створює програму для взаємодії з користувачем, яка дозволяє йому ввести пароль та підтвердити його. Після того, як користувач введе обидва паролі, програма перевіряє, чи співпадають вони, і якщо так — хешує пароль за допомогою бібліотеки argon2. Ось як працює код:

//Запит на ввід пароля та його підтвердження:

//Використовується бібліотека inquirer, яка дозволяє створювати інтерфейси для взаємодії з користувачем у консолі.

//Користувачу пропонується ввести пароль, який буде приховано (маскується як зірочка).

//Після введення пароля, система запитує повторне введення для підтвердження правильності введеного пароля.

//Перевірка співпадіння паролів:

//Після того, як користувач ввів обидва паролі, програма перевіряє, чи співпадають вони. Якщо паролі не співпадають, програма виводить повідомлення про помилку.

//Хешування пароля:

//Якщо паролі співпали, використовується бібліотека argon2 для хешування пароля. Це робиться через асинхронну функцію, яка обчислює хеш пароля та виводить його в консоль.

//Обробка помилок:

//Якщо під час хешування пароля виникне помилка, вона буде оброблена та виведена в консоль.

//Переваги: Інтерактивний ввід: Використання inquirer дає змогу створити більш зручний та естетичний інтерфейс для користувача в командному рядку.

//Безпека: Паролі маскуються, що забезпечує більшу конфіденційність.

//Хешування пароля: Використання сучасної бібліотеки argon2 гарантує безпечне зберігання паролів, оскільки хешування є одним з найкращих способів зберігати паролі в системах.
